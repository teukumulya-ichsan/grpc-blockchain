// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/blockchain.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AddBlockRequest struct {
	Data                 string   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddBlockRequest) Reset()         { *m = AddBlockRequest{} }
func (m *AddBlockRequest) String() string { return proto.CompactTextString(m) }
func (*AddBlockRequest) ProtoMessage()    {}
func (*AddBlockRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a884755cc01e392a, []int{0}
}

func (m *AddBlockRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddBlockRequest.Unmarshal(m, b)
}
func (m *AddBlockRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddBlockRequest.Marshal(b, m, deterministic)
}
func (m *AddBlockRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddBlockRequest.Merge(m, src)
}
func (m *AddBlockRequest) XXX_Size() int {
	return xxx_messageInfo_AddBlockRequest.Size(m)
}
func (m *AddBlockRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddBlockRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddBlockRequest proto.InternalMessageInfo

func (m *AddBlockRequest) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type AddBlockResponse struct {
	Hash                 string   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddBlockResponse) Reset()         { *m = AddBlockResponse{} }
func (m *AddBlockResponse) String() string { return proto.CompactTextString(m) }
func (*AddBlockResponse) ProtoMessage()    {}
func (*AddBlockResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a884755cc01e392a, []int{1}
}

func (m *AddBlockResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddBlockResponse.Unmarshal(m, b)
}
func (m *AddBlockResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddBlockResponse.Marshal(b, m, deterministic)
}
func (m *AddBlockResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddBlockResponse.Merge(m, src)
}
func (m *AddBlockResponse) XXX_Size() int {
	return xxx_messageInfo_AddBlockResponse.Size(m)
}
func (m *AddBlockResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddBlockResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddBlockResponse proto.InternalMessageInfo

func (m *AddBlockResponse) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

type Block struct {
	PrevBlockHash        string   `protobuf:"bytes,1,opt,name=prevBlockHash,proto3" json:"prevBlockHash,omitempty"`
	Data                 string   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Hash                 string   `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Block) Reset()         { *m = Block{} }
func (m *Block) String() string { return proto.CompactTextString(m) }
func (*Block) ProtoMessage()    {}
func (*Block) Descriptor() ([]byte, []int) {
	return fileDescriptor_a884755cc01e392a, []int{2}
}

func (m *Block) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Block.Unmarshal(m, b)
}
func (m *Block) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Block.Marshal(b, m, deterministic)
}
func (m *Block) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Block.Merge(m, src)
}
func (m *Block) XXX_Size() int {
	return xxx_messageInfo_Block.Size(m)
}
func (m *Block) XXX_DiscardUnknown() {
	xxx_messageInfo_Block.DiscardUnknown(m)
}

var xxx_messageInfo_Block proto.InternalMessageInfo

func (m *Block) GetPrevBlockHash() string {
	if m != nil {
		return m.PrevBlockHash
	}
	return ""
}

func (m *Block) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func (m *Block) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

type GetBlockChainRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBlockChainRequest) Reset()         { *m = GetBlockChainRequest{} }
func (m *GetBlockChainRequest) String() string { return proto.CompactTextString(m) }
func (*GetBlockChainRequest) ProtoMessage()    {}
func (*GetBlockChainRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a884755cc01e392a, []int{3}
}

func (m *GetBlockChainRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBlockChainRequest.Unmarshal(m, b)
}
func (m *GetBlockChainRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBlockChainRequest.Marshal(b, m, deterministic)
}
func (m *GetBlockChainRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBlockChainRequest.Merge(m, src)
}
func (m *GetBlockChainRequest) XXX_Size() int {
	return xxx_messageInfo_GetBlockChainRequest.Size(m)
}
func (m *GetBlockChainRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBlockChainRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBlockChainRequest proto.InternalMessageInfo

type GetBlockChainResponse struct {
	Blocks               []*Block `protobuf:"bytes,1,rep,name=blocks,proto3" json:"blocks,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBlockChainResponse) Reset()         { *m = GetBlockChainResponse{} }
func (m *GetBlockChainResponse) String() string { return proto.CompactTextString(m) }
func (*GetBlockChainResponse) ProtoMessage()    {}
func (*GetBlockChainResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a884755cc01e392a, []int{4}
}

func (m *GetBlockChainResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBlockChainResponse.Unmarshal(m, b)
}
func (m *GetBlockChainResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBlockChainResponse.Marshal(b, m, deterministic)
}
func (m *GetBlockChainResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBlockChainResponse.Merge(m, src)
}
func (m *GetBlockChainResponse) XXX_Size() int {
	return xxx_messageInfo_GetBlockChainResponse.Size(m)
}
func (m *GetBlockChainResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBlockChainResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetBlockChainResponse proto.InternalMessageInfo

func (m *GetBlockChainResponse) GetBlocks() []*Block {
	if m != nil {
		return m.Blocks
	}
	return nil
}

func init() {
	proto.RegisterType((*AddBlockRequest)(nil), "proto.AddBlockRequest")
	proto.RegisterType((*AddBlockResponse)(nil), "proto.AddBlockResponse")
	proto.RegisterType((*Block)(nil), "proto.Block")
	proto.RegisterType((*GetBlockChainRequest)(nil), "proto.GetBlockChainRequest")
	proto.RegisterType((*GetBlockChainResponse)(nil), "proto.GetBlockChainResponse")
}

func init() {
	proto.RegisterFile("proto/blockchain.proto", fileDescriptor_a884755cc01e392a)
}

var fileDescriptor_a884755cc01e392a = []byte{
	// 231 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2b, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0x4f, 0xca, 0xc9, 0x4f, 0xce, 0x4e, 0xce, 0x48, 0xcc, 0xcc, 0xd3, 0x03, 0x0b, 0x08,
	0xb1, 0x82, 0x29, 0x25, 0x55, 0x2e, 0x7e, 0xc7, 0x94, 0x14, 0x27, 0x90, 0x6c, 0x50, 0x6a, 0x61,
	0x69, 0x6a, 0x71, 0x89, 0x90, 0x10, 0x17, 0x4b, 0x4a, 0x62, 0x49, 0xa2, 0x04, 0xa3, 0x02, 0xa3,
	0x06, 0x67, 0x10, 0x98, 0xad, 0xa4, 0xc6, 0x25, 0x80, 0x50, 0x56, 0x5c, 0x90, 0x9f, 0x57, 0x9c,
	0x0a, 0x52, 0x97, 0x91, 0x58, 0x9c, 0x01, 0x53, 0x07, 0x62, 0x2b, 0x85, 0x72, 0xb1, 0x82, 0x15,
	0x09, 0xa9, 0x70, 0xf1, 0x16, 0x14, 0xa5, 0x96, 0x81, 0x39, 0x1e, 0x08, 0x55, 0xa8, 0x82, 0x70,
	0xab, 0x98, 0x10, 0x56, 0xc1, 0x8d, 0x65, 0x46, 0x32, 0x56, 0x8c, 0x4b, 0xc4, 0x3d, 0xb5, 0x04,
	0xac, 0xcf, 0x19, 0xe4, 0x07, 0xa8, 0x53, 0x95, 0x6c, 0xb9, 0x44, 0xd1, 0xc4, 0xa1, 0x6e, 0x53,
	0xe1, 0x62, 0x03, 0xfb, 0xb8, 0x58, 0x82, 0x51, 0x81, 0x59, 0x83, 0xdb, 0x88, 0x07, 0xe2, 0x6b,
	0x3d, 0x88, 0x0f, 0xa0, 0x72, 0x46, 0x33, 0x19, 0xb9, 0xb8, 0x10, 0x9a, 0x85, 0x6c, 0xb9, 0x38,
	0x60, 0x9e, 0x14, 0x12, 0x83, 0x6a, 0x40, 0x0b, 0x1c, 0x29, 0x71, 0x0c, 0x71, 0x88, 0x8d, 0x4a,
	0x0c, 0x42, 0x3e, 0x5c, 0xbc, 0x28, 0x8e, 0x11, 0x92, 0x86, 0xaa, 0xc5, 0xe6, 0x74, 0x29, 0x19,
	0xec, 0x92, 0x30, 0xd3, 0x92, 0xd8, 0xc0, 0xd2, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x9c,
	0xa0, 0x90, 0x18, 0xc0, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// BlockChainClient is the client API for BlockChain service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BlockChainClient interface {
	AddBlock(ctx context.Context, in *AddBlockRequest, opts ...grpc.CallOption) (*AddBlockResponse, error)
	GetBlockChain(ctx context.Context, in *GetBlockChainRequest, opts ...grpc.CallOption) (*GetBlockChainResponse, error)
}

type blockChainClient struct {
	cc grpc.ClientConnInterface
}

func NewBlockChainClient(cc grpc.ClientConnInterface) BlockChainClient {
	return &blockChainClient{cc}
}

func (c *blockChainClient) AddBlock(ctx context.Context, in *AddBlockRequest, opts ...grpc.CallOption) (*AddBlockResponse, error) {
	out := new(AddBlockResponse)
	err := c.cc.Invoke(ctx, "/proto.BlockChain/AddBlock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockChainClient) GetBlockChain(ctx context.Context, in *GetBlockChainRequest, opts ...grpc.CallOption) (*GetBlockChainResponse, error) {
	out := new(GetBlockChainResponse)
	err := c.cc.Invoke(ctx, "/proto.BlockChain/GetBlockChain", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BlockChainServer is the server API for BlockChain service.
type BlockChainServer interface {
	AddBlock(context.Context, *AddBlockRequest) (*AddBlockResponse, error)
	GetBlockChain(context.Context, *GetBlockChainRequest) (*GetBlockChainResponse, error)
}

// UnimplementedBlockChainServer can be embedded to have forward compatible implementations.
type UnimplementedBlockChainServer struct {
}

func (*UnimplementedBlockChainServer) AddBlock(ctx context.Context, req *AddBlockRequest) (*AddBlockResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddBlock not implemented")
}
func (*UnimplementedBlockChainServer) GetBlockChain(ctx context.Context, req *GetBlockChainRequest) (*GetBlockChainResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBlockChain not implemented")
}

func RegisterBlockChainServer(s *grpc.Server, srv BlockChainServer) {
	s.RegisterService(&_BlockChain_serviceDesc, srv)
}

func _BlockChain_AddBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddBlockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockChainServer).AddBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.BlockChain/AddBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockChainServer).AddBlock(ctx, req.(*AddBlockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockChain_GetBlockChain_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBlockChainRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockChainServer).GetBlockChain(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.BlockChain/GetBlockChain",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockChainServer).GetBlockChain(ctx, req.(*GetBlockChainRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BlockChain_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.BlockChain",
	HandlerType: (*BlockChainServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddBlock",
			Handler:    _BlockChain_AddBlock_Handler,
		},
		{
			MethodName: "GetBlockChain",
			Handler:    _BlockChain_GetBlockChain_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/blockchain.proto",
}
